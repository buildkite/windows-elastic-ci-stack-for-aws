---
AWSTemplateFormatVersion: '2010-09-09'
Description: Windows Buildkite Agent
Parameters:
  BuildkiteAgentToken:
    Description: Buildkite agent token
    Type: String
    NoEcho: true
    MinLength: 1

  BuildkiteOrgSlug:
    Description: Buildkite organization slug
    Type: String
    MinLength: 1

  BuildkiteApiAccessToken:
    Description: Buildkite API access token with read_pipelines, read_builds and read_agents (required for metrics)
    Type: String
    NoEcho: true
    MinLength: 1

  BuildkiteQueue:
    Description: Queue name that agents will use, targeted in pipeline steps using "queue={value}"
    Type: String
    Default: default
    MinLength: 1

  VpcId:
    Type: String
    Description: Optional - Id of an existing VPC to launch instances into. Leave blank to have a new VPC created
    Default: ""

  Subnets:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of two existing VPC subnet ids where EC2 instances will run. Required if setting VpcId.
    Default: ""

  AvailabilityZones:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of AZs that subnets are created in (if Subnets parameter is not specified)
    Default: ""

  InstanceType:
    Description: Instance type
    Type: String
    Default: t2.medium
    MinLength: 1

  MaxSize:
    Description: Maximum number of instances
    Type: Number
    Default: 10
    MinValue: 1

  MinSize:
    Description: Minimum number of instances
    Type: Number
    Default: 0

  RootVolumeSize:
    Description: Size of each instance's root EBS volume (in GB)
    Type: Number
    Default: 60
    MinValue: 10

  ImageId:
    Type: String
    Description: Custom AMI to use for instances

  AssociatePublicIpAddress:
    Type: String
    Description: Associate instances with public IP addresses
    AllowedValues:
      - true
      - false
    Default: "true"

  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: "AWS::EC2::KeyPair::KeyName"

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs: { VolumeSize: { Ref: RootVolumeSize }, VolumeType: gp2 }
      ImageId: !Ref Image
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      Monitoring: 'true'
      SecurityGroupIds:
      - Fn::GetAtt:
        - SecurityGroup
        - GroupId
      Tenancy: default

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable http access and rdp from anywhere
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: '80'
        IpProtocol: tcp
        ToPort: '80'
      - CidrIp: 0.0.0.0/0
        FromPort: '3389'
        IpProtocol: tcp
        ToPort: '3389'

